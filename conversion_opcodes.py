conversion_opcodes = {
'control_forever': '',
'control_repeat': 'for n in range({TIMES})\n    {indent(SUBSTACK)}',
'control_if': 'if {CONDITION}:\n    {indent(SUBSTACK)}',
'control_if_else': 'if {CONDITION}:\n    {indent(SUBSTACK)}\nelse:\n    {indent(SUBSTACK2)}',
'control_stop': 'pygame.quit()\nsys.exit()',
'control_wait': 'time.sleep({DURATION})',
'control_wait_until': 'while True:\n    if {CONDITION}:\n        break',
'control_repeat_until': '',
'control_while': '',
'control_for_each': '',
'control_start_as_clone': 'if {sprite}.clone_created:',
'control_create_clone_of': '{sprite}_clone = {sprite}_object({sprite}.rect.center)\nsprite_list.add({sprite}_clone)\nsprite_list.update()\nclone_created = True',
'control_delete_this_clone': '{sprite}_clone.kill()',
'control_get_counter': '',
'control_incr_counter': '',
'control_clear_counter': '',
'control_all_at_once': '',

'data_variable': '',
'data_setvariableto': '',
'data_changevariableby': '',
'data_showvariable': '',
'data_hidevariable': '',
'data_listcontents': '',
'data_listindexall': '',
'data_listindexrandom': '',
'data_addtolist': '',
'data_deleteoflist': '',
'data_deletealloflist': '',
'data_insertatlist': '',
'data_replaceitemoflist': '',
'data_itemoflist': '',
'data_itemnumoflist': '',
'data_lengthoflist': '',
'data_listcontainsitem': '',
'data_showlist': '',
'data_hidelist': '',

'event_whentouchingobject': '',
'event_whenflagclicked': 'if start == True:\n    start = False',
'event_whenthisspriteclicked': 'if {sprite}.rect.collidepoint(pygame.mouse.get_pos()) and pygame.mouse.get_pressed()[0]:',
'event_whenstageclicked': 'if pygame.mouse.get_pressed()[0]:',
'event_whenbroadcastreceived': 'if broadcastdict[{BROADCAST_INPUT}] == True:\n    broadcastdict[{BROADCAST_INPUT}] = False',
'event_whenbackdropswitchesto': '',
'event_whengreaterthan': '',
'event_broadcast_menu': '{BROADCAST_OPTION}',
'event_broadcast': 'broadcastdict[{BROADCAST_INPUT}] = True',
'event_broadcastandwait': '',
'event_whenkeypressed': 'if pygame.key.get_pressed()[pygame.K_{KEY_OPTION.upper()}]:',

'looks_sayforsecs': '',
'looks_say': '',
'looks_thinkforsecs': '',
'looks_think': '',
'looks_show': '{sprite}.image = {sprite}.imagefile',
'looks_hide': '{sprite}.fill = (0, 0, 0, 0)',
'looks_hideallsprites': '',
'looks_changeeffectby': '',
'looks_seteffectto': '',
'looks_cleargraphiceffects': '',
'looks_changesizeby': '',
'looks_setsizeto': '',
'looks_size': '',
'looks_changestretchby': '',
'looks_setstretchto': '',
'looks_costume': '',
'looks_switchcostumeto': '{sprite}.costume_num = {COSTUME}',
'looks_nextcostume': '{sprite}.costume_num += 1',
'looks_switchbackdropto': '',
'looks_backdrops': '',
'looks_gotofrontback': '',
'looks_goforwardbackwardlayers': '',
'looks_backdropnumbername': '',
'looks_costumenumbername': '',
'looks_switchbackdroptoandwait': '',
'looks_nextbackdrop': '',

'motion_movesteps': '{sprite}.pos_x += {STEPS}',
'motion_turnright': '{sprite}.image = pygame.transform.rotate({sprite}.image, -{DEGREES})',
'motion_turnleft': '{sprite}.image = pygame.transform.rotate({sprite}.image, {DEGREES})',
'motion_pointindirection': '',
'motion_pointtowards': '',
'motion_gotoxy': '{sprite}.pos_x = {X}\n{sprite}.pos_x = {Y}',
'motion_goto': '',
'motion_glidesecstoxy': '',
'motion_glideto': '',
'motion_changexby': '{sprite}.pos_x += {DX}',
'motion_setx': '{sprite}.pos_x = {X}\n{sprite}.pos_x = {Y}',
'motion_changeyby': '{sprite}.pos_y += {DY}',
'motion_sety': '{sprite}.pos_x = {Y}',
'motion_ifonedgebounce': '',
'motion_setrotationstyle': '',
'motion_xposition': '{sprite}.pos_x',
'motion_yposition': '{sprite}.pos_y',
'motion_direction': '',
'motion_scroll_right': '',

'operator_add': '{OPERAND1} + {OPERAND2}',
'operator_subtract': '{OPERAND1} - {OPERAND2}',
'operator_multiply': '{OPERAND1} * {OPERAND2}',
'operator_divide': '{OPERAND1} < {OPERAND2}',
'operator_random': 'random.randint({FROM}, {TO})',
'operator_lt': '{OPERAND1} < {OPERAND2}',
'operator_equals': '{OPERAND1} == {OPERAND2}',
'operator_gt': '{OPERAND1} > {OPERAND2}',
'operator_and': '{OPERAND1} and {OPERAND2}',
'operator_or': '{OPERAND1} or {OPERAND2}',
'operator_not': 'not {OPERAND}',
'operator_join': '{STRING1} + {STRING2}',
'operator_letter_of': '{STRING}[{LETTER}]',
'operator_length': 'len({STRING})',
'operator_contains': '{STRING2} in {STRING1}',
'operator_mod': '{OPERAND1} % {OPERAND2}',
'operator_round': 'round({OPERAND])',
'operator_mathop': '',

#add sensing

'sensing_mousex': 'pygame.mouse.get_pos()[0]',
'sensing_mousey': 'pygame.mouse.get_pos()[1]',

#add sound
'sound_sounds_menu': '',
'sound_play': '{SOUND_MENU}',
'sound_playuntildone': '{SOUND_MENU}',
}
